--- apprx.h.w-matgen-patch	2013-02-13 16:59:29.000000000 +0000
+++ apprx.h.generic_aca	2013-02-13 17:10:00.000000000 +0000
@@ -135,7 +135,11 @@
 
 // matrix generation procedure for unsymmetric matrices
 template<class T,class T1,class T2, class MATGEN_T>
-void apprx_unsym(MATGEN_T& MatGen, mblock<T>* &mbl, bemblcluster<T1,T2>* bl,
+void apprx_unsym_generic(
+        bool (*aca_routine)(MATGEN_T&, unsigned, unsigned, unsigned, unsigned,
+                            double, unsigned, unsigned, unsigned&, T*&, T*&,
+                            const cluster*, const cluster*),
+        MATGEN_T& MatGen, mblock<T>* &mbl, bemblcluster<T1,T2>* bl,
                  double eps, unsigned rankmax)
 {
   unsigned n1 = bl->getn1(), n2 = bl->getn2();
@@ -154,7 +158,7 @@
     T *U, *V;
 
     unsigned i0 = bl->getcl1()->geticom() - b1;
-    succ = ::ACA(MatGen, b1, n1, b2, n2, eps, maxk, i0, k, U, V,
+    succ = aca_routine(MatGen, b1, n1, b2, n2, eps, maxk, i0, k, U, V,
                  bl->getcl1(), bl->getcl2());
 
     if (succ) {
@@ -173,6 +177,13 @@
   }
 }
 
+template<class T,class T1,class T2, class MATGEN_T>
+void apprx_unsym(MATGEN_T& MatGen, mblock<T>* &mbl, bemblcluster<T1,T2>* bl,
+                 double eps, unsigned rankmax)
+{
+    apprx_unsym_generic(&ACA<T, MATGEN_T>, MatGen, mbl, bl, eps, rankmax);
+}
+
 // matrix generation procedure for unsymmetric matrices
 template<class T,class T1,class T2, class MATGEN_T>
 void apprxSVD_unsym(MATGEN_T& MatGen, mblock<T>* &mbl, bemblcluster<T1,T2>* bl,
